services:
  db:
    build: ./service-catalog-db
    image: service-catalog-db:latest
    environment:
      POSTGRES_DB: service_catalog
      POSTGRES_USER: svcuser
      POSTGRES_PASSWORD: svcpass
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U svcuser -d service_catalog || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./perl-api
    image: perl-service-catalog:latest
    container_name: perl-api-1
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: service_catalog
      DB_USER: svcuser
      DB_PASS: svcpass
    ports:
      - "5000:5000"
    restart: unless-stopped

  openapi:
    build: ./openapi
    image: interop-openapi:latest
    ports:
      - "8081:80"
    restart: unless-stopped

  java-api:
    build: ./java-api
    image: java-service-catalog:latest
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: service_catalog
      DB_USER: svcuser
      DB_PASS: svcpass
    ports:
      - "8080:8080"
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_IMPORT: "true"
    command: ["start-dev","--http-enabled=true"]
    ports:
      - "8180:8080"
    # Optional: import realm file if present under ./service-catalog/keycloak/realm-export.json
    # volumes:
    #   - ./service-catalog/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
  # NOTE: a second postgres service (named 'postgres') was removed to avoid confusion.
  # The single Postgres instance used by the APIs is `db` (service-catalog-db).
  # If you need a separate Postgres for other projects, add it back with a different name.

  admin-web:
    build:
      context: .
      dockerfile: admin-web/Dockerfile
    image: interop-admin-web:latest
    depends_on:
      - api
      - java-api
    environment:
      PERL_API_BASE: http://api:5000
      JAVA_API_BASE: http://java-api:8080
    ports:
      - "8082:3000"
    restart: unless-stopped

volumes:
  db_data:

